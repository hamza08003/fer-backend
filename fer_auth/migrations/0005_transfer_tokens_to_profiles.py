# Generated by Django 5.2.4 on 2025-07-08 17:55

from django.db import migrations


def transfer_tokens(apps, schema_editor):
    """
    Transfer tokens from separate models to UserProfile
    """
    UserProfile = apps.get_model('fer_auth', 'UserProfile')
    EmailVerificationToken = apps.get_model('fer_auth', 'EmailVerificationToken')
    PasswordResetToken = apps.get_model('fer_auth', 'PasswordResetToken')
    
    # Transfer email verification tokens (most recent only)
    for token in EmailVerificationToken.objects.all():
        try:
            profile = UserProfile.objects.get(user=token.user)
            # only update if this token is newer than existing
            if (not profile.email_token_created_at or 
                profile.email_token_created_at < token.created_at):
                profile.email_verification_token = token.token
                profile.email_token_created_at = token.created_at
                profile.email_token_expires_at = token.expires_at
                profile.save()
        except UserProfile.DoesNotExist:
            pass
            
    # Transfer password reset tokens (most recent only)
    for token in PasswordResetToken.objects.all():
        try:
            profile = UserProfile.objects.get(user=token.user)
            # only update if this token is newer than existing
            if (not profile.password_token_created_at or 
                profile.password_token_created_at < token.created_at):
                profile.password_reset_token = token.token
                profile.password_token_created_at = token.created_at
                profile.password_token_expires_at = token.expires_at
                profile.password_token_used = token.used
                profile.save()
        except UserProfile.DoesNotExist:
            pass

class Migration(migrations.Migration):

    dependencies = [
        ('fer_auth', '0004_add_token_fields_to_userprofile'),
    ]

    operations = [
        migrations.RunPython(transfer_tokens, migrations.RunPython.noop),
    ]
